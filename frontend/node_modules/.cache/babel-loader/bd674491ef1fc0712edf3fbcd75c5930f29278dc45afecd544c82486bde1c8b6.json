{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\balne\\\\Desktop\\\\website-content-search\\\\frontend\\\\src\\\\components\\\\SearchResults.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResults = ({\n  results\n}) => {\n  _s();\n  const [selectedHtml, setSelectedHtml] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleViewHtml = htmlContent => {\n    setSelectedHtml(htmlContent);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedHtml(null);\n  };\n\n  // Function to escape HTML for safe display\n  const escapeHtml = unsafe => {\n    if (!unsafe) return '';\n    return unsafe.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#039;\");\n  };\n\n  // Function to format HTML with proper indentation\n  const formatHtml = html => {\n    if (!html) return '';\n\n    // Basic formatting - add line breaks after tags\n    let formatted = html.replace(/>\\s*</g, '>\\n<').replace(/(<\\/[^>]+>)/g, '$1\\n').replace(/(<[^/>][^>]*>)/g, '$1');\n\n    // Add indentation\n    let indentLevel = 0;\n    const lines = formatted.split('\\n');\n    const formattedLines = lines.map(line => {\n      line = line.trim();\n      if (!line) return '';\n      if (line.startsWith('</')) {\n        indentLevel--;\n      }\n      const indentedLine = '  '.repeat(Math.max(0, indentLevel)) + line;\n      if (line.startsWith('<') && !line.startsWith('</') && !line.endsWith('/>') && !line.includes('</')) {\n        indentLevel++;\n      }\n      return indentedLine;\n    });\n    return formattedLines.filter(line => line).join('\\n');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-results\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-list\",\n      children: results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              dangerouslySetInnerHTML: {\n                __html: result.content || `${result.heading ? `<strong>${result.heading}</strong><br/>` : ''}${result.paragraph || ''}`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"match-score\",\n            children: [result.match_score, \"% match\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"path\",\n            children: [\"Path: \", result.path]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"view-html-btn\",\n            onClick: () => handleViewHtml(result.html_content),\n            children: \"View HTML\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"HTML Source Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: closeModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"html-content\",\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            children: selectedHtml ? escapeHtml(formatHtml(selectedHtml)) : 'No HTML content available'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResults, \"5kqdMvpPWg6D4bs6vs5BXTZgQCs=\");\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SearchResults","results","_s","selectedHtml","setSelectedHtml","isModalOpen","setIsModalOpen","handleViewHtml","htmlContent","closeModal","escapeHtml","unsafe","replace","formatHtml","html","formatted","indentLevel","lines","split","formattedLines","map","line","trim","startsWith","indentedLine","repeat","Math","max","endsWith","includes","filter","join","className","children","fileName","_jsxFileName","lineNumber","columnNumber","result","index","dangerouslySetInnerHTML","__html","content","heading","paragraph","match_score","path","onClick","html_content","_c","$RefreshReg$"],"sources":["C:/Users/balne/Desktop/website-content-search/frontend/src/components/SearchResults.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst SearchResults = ({ results }) => {\r\n  const [selectedHtml, setSelectedHtml] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const handleViewHtml = (htmlContent) => {\r\n    setSelectedHtml(htmlContent);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedHtml(null);\r\n  };\r\n\r\n  // Function to escape HTML for safe display\r\n  const escapeHtml = (unsafe) => {\r\n    if (!unsafe) return '';\r\n    return unsafe\r\n      .replace(/&/g, \"&amp;\")\r\n      .replace(/</g, \"&lt;\")\r\n      .replace(/>/g, \"&gt;\")\r\n      .replace(/\"/g, \"&quot;\")\r\n      .replace(/'/g, \"&#039;\");\r\n  };\r\n\r\n  // Function to format HTML with proper indentation\r\n  const formatHtml = (html) => {\r\n    if (!html) return '';\r\n    \r\n    // Basic formatting - add line breaks after tags\r\n    let formatted = html\r\n      .replace(/>\\s*</g, '>\\n<')\r\n      .replace(/(<\\/[^>]+>)/g, '$1\\n')\r\n      .replace(/(<[^/>][^>]*>)/g, '$1');\r\n    \r\n    // Add indentation\r\n    let indentLevel = 0;\r\n    const lines = formatted.split('\\n');\r\n    const formattedLines = lines.map(line => {\r\n      line = line.trim();\r\n      if (!line) return '';\r\n      \r\n      if (line.startsWith('</')) {\r\n        indentLevel--;\r\n      }\r\n      \r\n      const indentedLine = '  '.repeat(Math.max(0, indentLevel)) + line;\r\n      \r\n      if (line.startsWith('<') && !line.startsWith('</') && !line.endsWith('/>') && !line.includes('</')) {\r\n        indentLevel++;\r\n      }\r\n      \r\n      return indentedLine;\r\n    });\r\n    \r\n    return formattedLines.filter(line => line).join('\\n');\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-results\">\r\n      <h2>Search Results</h2>\r\n      <div className=\"results-list\">\r\n        {results.map((result, index) => (\r\n          <div key={index} className=\"result-card\">\r\n            <div className=\"result-header\">\r\n              <div className=\"result-content\">\r\n                <div \r\n                  dangerouslySetInnerHTML={{ \r\n                    __html: result.content || `${result.heading ? `<strong>${result.heading}</strong><br/>` : ''}${result.paragraph || ''}`\r\n                  }} \r\n                />\r\n              </div>\r\n              <span className=\"match-score\">{result.match_score}% match</span>\r\n            </div>\r\n            <div className=\"result-footer\">\r\n              <span className=\"path\">Path: {result.path}</span>\r\n              <button \r\n                className=\"view-html-btn\"\r\n                onClick={() => handleViewHtml(result.html_content)}\r\n              >\r\n                View HTML\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h3>HTML Source Code</h3>\r\n              <button className=\"close-btn\" onClick={closeModal}>\r\n                Close\r\n              </button>\r\n            </div>\r\n            <pre className=\"html-content\">\r\n              <code>{selectedHtml ? escapeHtml(formatHtml(selectedHtml)) : 'No HTML content available'}</code>\r\n            </pre>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}